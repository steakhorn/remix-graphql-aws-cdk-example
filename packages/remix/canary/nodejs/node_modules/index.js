const synthetics = require('Synthetics');
const log = require('SyntheticsLogger');

exports.handler = async () => {
  const url = `https://${process.env.domain}/`;

  const page = await synthetics.getPage();
  const response = await page.goto(url, { waitUntil: 'domcontentloaded', timeout: 30000 });

  if (response.status() !== 200) {
    throw 'Failed to load page!';
  }

  await synthetics.executeStep("Confirm landing page table loaded", async () => {
    await page.waitForXPath("//h1[contains(., 'Albums')]");

    const rawTableData = await page.evaluate(getRawTableData);

    if (rawTableData.length < 3) {
      throw new Error("Albums table must have at least 3 rows present");
    }

    const hunkyDory = await page.waitForXPath("//a[contains(., 'Hunky Dory')]");
    await page.waitForXPath("//td[contains(., 'David Bowie')]");

    await page.waitForXPath("//a[contains(., 'Hot Space')]");
    await page.waitForXPath("//td[contains(., 'Queen')]");

    await page.waitForXPath("//a[contains(., 'ATLiens')]");
    await page.waitForXPath("//td[contains(., 'Outkast')]");

    await hunkyDory.click();
  });

  await synthetics.executeStep("Confirm album page loaded", async () => {
    await page.waitForXPath("//span[contains(., 'Album: Hunky Dory')]");

    const rawTableData = await page.evaluate(getRawTableData);

    if (rawTableData.length < 11) {
      throw new Error("Hunky Dory track list table must have at least 11 rows present");
    }

    const changes = await page.waitForXPath("//a[contains(., 'Changes')]");
    await changes.click();
  });

  await synthetics.executeStep("Confirm track page loaded", async () => {
    await page.waitForXPath("//span[contains(., 'Track: Changes')]");

    await page.waitForXPath("//dd/a[contains(., 'Hunky Dory')]");
    await page.waitForXPath("//dd[contains(., 'David Bowie')]");
    await page.waitForXPath("//dd[contains(., 'Rock')]");
  });

  await synthetics.executeStep("Confirm breadcrumbs album link works", async () => {
    const link = await page.waitForXPath("//a[contains(., 'Album: Hunky Dory')]");
    await link.click();
    await page.waitForSelector("table");
  });
};

function getRawTableData() {
  const data = [];
  const table = document.querySelector('table');
  for (let i = 1; i < table.rows.length; i++) {
    const objCells = table.rows.item(i).cells;
    const values = [];
    for (let j = 0; j < objCells.length; j++) {
      const text = objCells.item(j).innerHTML;
      values.push(text);
    }
    const d = { i, values };
    data.push(d);
  }
  return data;
}
